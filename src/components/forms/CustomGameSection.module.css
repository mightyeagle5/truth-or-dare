/* Custom Game Template Styles */
.customGameContainer {
  display: flex;
  flex-direction: column;
  gap: 24px;
  width: 100%;
  max-width: 860px;
  margin: 0 auto;
  padding: 24px;
}

.customGameTemplate {
  display: flex;
  flex-direction: column;
  gap: 24px;
  width: 100%;
}

.customGameContent {
  display: flex;
  flex-direction: column;
  gap: 24px;
  width: 100%;
}

.customGameContent h3 {
  font-size: 1.25rem;
  /* var(--font-size-xl) */
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-primary);
}

.playersSection,
.addCustomSection,
.addGameSection,
.challengesSection {
  display: flex;
  flex-direction: column;
  gap: var(--space-4);
}

/* Section dividers */
.playersSection:not(:first-child)::before,
.addCustomSection:not(:first-child)::before,
.addGameSection:not(:first-child)::before,
.challengesSection:not(:first-child)::before,
.gameConfigSection:not(:first-child)::before,
.gameModeSection:not(:first-child)::before {
  content: '';
  height: 1px;
  background: var(--color-border-primary);
  margin: var(--space-6) auto;
  width: 80%;
}

.customGameHeaderAlt {
  text-align: center;
  font-size: 3rem;
  font-weight: var(--font-weight-bold);
  color: var(--color-text-primary);
  margin-top: 192px; /* Add top margin above the title */
}

.addSectionsGrid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  column-gap: 48px;
  row-gap: 32px;
}

/* 2x2 grid placement: left spans two rows; right split in two */
.addCustomSection { grid-column: 1; grid-row: 1 / span 2; }
.addGameSection { grid-column: 2; grid-row: 1; }
.uploadSection { grid-column: 2; grid-row: 2; }

/* Single divider above the grouped grid; none between the two columns */
.addSectionsContainer::before {
  content: '';
  display: block;
  height: 1px;
  background: var(--color-border-primary);
  margin: var(--space-6) auto;
  width: 80%;
}
.addSectionsGrid .addCustomSection::before,
.addSectionsGrid .addGameSection::before,
.addSectionsGrid .uploadSection::before {
  content: none !important;
}
.uploadSection { display: flex; flex-direction: column; gap: var(--space-3); justify-content: flex-end; }
.uploadHelpText { color: var(--color-text-muted); margin: 0; font-size: var(--font-size-sm); }

/* Kind + Level in one row (two columns), button spans full width below */
.challengeControlsGrid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--space-3);
}
.challengeControlsGrid .addCustomButton {
  grid-column: 1 / -1; /* place button on its own row under Kind/Level */
  width: 100%;
}

.gameChallengeSelectorColumn {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--space-3);
}
.gameChallengeSelectorColumn .addGameButton {
  grid-column: 1 / -1; /* place button on its own row under Kind/Level */
  width: 100%;
}

.customGameContent p {
  font-size: 1.25rem;
  color: var(--color-text-tertiary);
  margin: 0;
}

/* Custom Challenge Form */
.customChallengeForm {
  display: flex;
  flex-direction: column;
  gap: var(--space-4);
}

.sectionHeaderSimple { margin: 0 0 var(--space-2) 0; }
.addCustomSection .sectionHeaderSimple,
.addGameSection .sectionHeaderSimple,
.uploadSection .sectionHeaderSimple { margin-bottom: var(--space-2); }


.challengeTextarea {
  width: 100%;
  min-height: 105px;
  padding: var(--space-3);
  background: var(--color-bg-input);
  border: 1px solid var(--color-border-secondary);
  border-radius: var(--radius-lg);
  color: var(--color-text-primary);
  font-size: var(--font-size-sm);
  resize: vertical;
  font-family: inherit;
}

.challengeTextarea::placeholder {
  color: var(--color-text-muted);
}

.challengeTextarea:focus {
  outline: none;
  border-color: var(--color-primary-500);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.gameChallengeSelectorColumn { display: grid; grid-template-columns: 1fr 1fr; gap: var(--space-3); }

.challengeSelect {
  padding: var(--space-2) var(--space-2) var(--space-2) var(--space-3);
  background: var(--color-bg-input);
  border: 1px solid var(--color-border-secondary);
  border-radius: var(--radius-md);
  color: var(--color-text-primary);
  font-size: var(--font-size-sm);
  min-width: 100px;
  appearance: none;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
  background-position: right var(--space-2) center;
  background-repeat: no-repeat;
  background-size: var(--space-4);
}

.challengeSelect:focus {
  outline: none;
  border-color: var(--color-primary-500);
}

.addCustomButton {
  padding: var(--space-2) var(--space-4);
  background: linear-gradient(135deg, var(--color-success-500), var(--color-success-600));
  color: var(--color-text-primary);
  border: 1px solid var(--color-success-600);
  border-radius: var(--radius-md);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-semibold);
  cursor: pointer;
  transition: all var(--transition-fast);
}

.addCustomButton:hover:not(:disabled) {
  background: linear-gradient(135deg, var(--color-success-600), var(--color-success-700));
  transform: translateY(-1px);
}

.addCustomButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
}

.addGameButton {
  padding: var(--space-2) var(--space-4);
  background: linear-gradient(135deg, var(--color-primary-500), var(--color-primary-600));
  color: var(--color-text-primary);
  border: 1px solid var(--color-primary-600);
  border-radius: var(--radius-md);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-semibold);
  cursor: pointer;
  transition: all var(--transition-fast);
}

.addGameButton:hover:not(:disabled) {
  background: linear-gradient(135deg, var(--color-primary-600), var(--color-primary-700));
  transform: translateY(-1px);
}

.addGameButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
}

/* Challenges List */
.challengesList {
  display: flex;
  flex-direction: column;
  gap: var(--space-3);
  max-height: 480px;
  height: auto;
  overflow-y: auto;
  padding-right: var(--space-1);
}

/* Custom scrollbar for challenges list */
.challengesList::-webkit-scrollbar {
  width: var(--space-1);
}

.challengesList::-webkit-scrollbar-track {
  background: var(--color-bg-card);
  border-radius: 3px;
}

.challengesList::-webkit-scrollbar-thumb {
  background: var(--color-border-secondary);
  border-radius: 3px;
}

.challengesList::-webkit-scrollbar-thumb:hover {
  background: var(--color-neutral-500);
}

.emptyMessage {
  text-align: center;
  color: var(--color-text-muted);
  font-style: italic;
  padding-top: var(--space-5);
}

.challengeItem {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  gap: var(--space-3);
  padding: var(--space-4);
  background: var(--color-bg-card);
  border: 1px solid var(--color-border-primary);
  border-radius: var(--radius-lg);
  transition: all var(--transition-fast);
}

.challengeItem:hover {
  background: var(--color-bg-input);
  border-color: var(--color-border-secondary);
}

.challengeInfo {
  flex: 1;
  min-width: 0;
}

.challengeHeader {
  display: flex;
  gap: var(--space-2);
  align-items: center;
  margin-bottom: var(--space-2);
  flex-wrap: wrap;
}

.challengeType {
  height: 28px;
  padding: 0 var(--space-3);
  border-radius: var(--radius-sm);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  display: flex;
  align-items: center;
  justify-content: center;
}

.challengeType.truth {
  background: rgba(59, 130, 246, 0.2);
  border: 1px solid var(--color-primary-500);
  color: var(--color-primary-400);
}

.challengeType.dare {
  background: rgba(239, 68, 68, 0.2);
  border: 1px solid var(--color-error-500);
  color: var(--color-error-400);
}

.challengeLevel {
  height: 28px;
  padding: 0 var(--space-3);
  border-radius: var(--radius-sm);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  display: flex;
  align-items: center;
  justify-content: center;
}

.challengeLevel.soft {
  background: rgba(110, 231, 183, 0.2);
  border: 1px solid var(--color-level-soft);
  color: var(--color-level-soft);
}

.challengeLevel.mild {
  background: rgba(96, 165, 250, 0.2);
  border: 1px solid var(--color-primary-400);
  color: var(--color-primary-400);
}

.challengeLevel.hot {
  background: rgba(245, 158, 11, 0.2);
  border: 1px solid var(--color-level-hot);
  color: var(--color-level-hot);
}

.challengeLevel.spicy {
  background: rgba(248, 113, 113, 0.2);
  border: 1px solid var(--color-error-400);
  color: var(--color-error-400);
}

.challengeLevel.kinky {
  background: rgba(167, 139, 250, 0.2);
  border: 1px solid var(--color-purple-400);
  color: var(--color-purple-400);
}

.challengeSource {
  height: 28px;
  padding: 0 var(--space-3);
  border-radius: var(--radius-sm);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  display: flex;
  align-items: center;
  justify-content: center;
}

.challengeSource.custom {
  background: rgba(34, 197, 94, 0.2);
  border: 1px solid var(--color-source-custom);
  color: var(--color-success-400);
}

.challengeSource.game {
  background: rgba(139, 92, 246, 0.2);
  border: 1px solid var(--color-source-game);
  color: var(--color-purple-400);
}

.challengeText {
  color: var(--color-text-tertiary);
  font-size: var(--font-size-sm);
  line-height: 1.5;
  margin: 0;
  word-wrap: break-word;
}

.removeButton {
  flex-shrink: 0;
  width: 28px;
  height: 28px;
  border: none;
  border-radius: var(--radius-md);
  background: var(--color-neutral-500);
  color: var(--color-text-primary);
  font-size: var(--font-size-lg);
  font-weight: bold;
  cursor: pointer;
  transition: all var(--transition-fast);
  display: flex;
  align-items: center;
  justify-content: center;
  line-height: 1;
}

.removeButton:hover {
  background: var(--color-error-500);
  transform: translateY(-1px);
}

/* Challenge Filter */
.challengesHeader {
  display: flex;
  flex-direction: column;
  gap: var(--space-4);
}

.challengeFilter {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: var(--space-4);
}

.filterButtons {
  display: flex;
  gap: var(--space-2);
}

.previewToggle {
  padding: var(--space-1) var(--space-3);
  border: 1px solid var(--color-border-primary);
  border-radius: var(--radius-md);
  background: var(--color-bg-tertiary);
  color: var(--color-text-muted);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  cursor: pointer;
  transition: all var(--transition-fast);
  white-space: nowrap;
}

.previewToggle:hover {
  background: var(--color-border-primary);
  border-color: var(--color-border-secondary);
  color: var(--color-text-secondary);
}

.previewToggle.active {
  background: var(--color-primary-500);
  border-color: var(--color-primary-500);
  color: var(--color-text-primary);
}

.previewToggle.active:hover {
  background: var(--color-primary-600);
  border-color: var(--color-primary-600);
}

.filterButton {
  padding: var(--space-1) var(--space-3);
  background: var(--color-bg-input);
  border: 1px solid var(--color-border-secondary);
  border-radius: var(--radius-md);
  color: var(--color-text-muted);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  cursor: pointer;
  transition: all var(--transition-fast);
}

.filterButton:hover {
  background: var(--color-bg-hover);
  border-color: var(--color-neutral-500);
  color: var(--color-text-tertiary);
}

.filterButton.active {
  background: linear-gradient(135deg, var(--color-primary-500), var(--color-primary-600));
  border-color: var(--color-primary-500);
  color: var(--color-text-primary);
}

/* Game Mode Selection */
.gameModeSection {
  display: flex;
  flex-direction: column;
  gap: var(--space-4);
}

.gameModeOptions {
  display: flex;
  flex-direction: column;
  gap: var(--space-3);
}

.gameModeOption {
  display: flex;
  align-items: flex-start;
  gap: var(--space-3);
  padding: var(--space-4);
  background: var(--color-bg-card);
  border: 1px solid var(--color-border-primary);
  border-radius: var(--radius-lg);
  cursor: pointer;
  transition: all var(--transition-fast);
}

.gameModeOption:hover:not(:has(input:disabled)) {
  background: var(--color-bg-input);
  border-color: var(--color-border-secondary);
}

.gameModeOption:has(input:checked) {
  background: rgba(59, 130, 246, 0.1);
  border-color: var(--color-primary-500);
}

.gameModeOption:has(input:disabled) {
  opacity: 0.5;
  cursor: not-allowed;
}

.gameModeOption input[type="radio"] {
  margin: 0;
  width: var(--font-size-lg);
  height: var(--font-size-lg);
  accent-color: var(--color-primary-500);
  flex-shrink: 0;
  margin-top: var(--space-1);
}

.gameModeLabel {
  display: flex;
  flex-direction: column;
  gap: var(--space-1);
  color: var(--color-text-tertiary);
}

.gameModeLabel strong {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-secondary);
}

.gameModeLabel small {
  font-size: var(--font-size-sm);
  color: var(--color-text-muted);
  line-height: 1.4;
}

.gameModeDisabledText {
  font-size: var(--font-size-sm);
  color: var(--color-text-muted);
  font-style: italic;
  margin: 0;
  text-align: center;
}

/* Section headers with buttons */
.sectionHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--space-4);
}

.sectionHeader h3 {
  margin: 0;
}

/* Upload and Download buttons */
.uploadButton,
.downloadButton {
  padding: var(--space-2) var(--space-4);
  border: 1px solid var(--color-border-primary);
  border-radius: var(--radius-md);
  background: var(--color-bg-tertiary);
  color: var(--color-text-secondary);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  cursor: pointer;
  transition: all var(--transition-fast);
}

.uploadButton:hover,
.downloadButton:hover:not(:disabled) {
  background: var(--color-border-primary);
  border-color: var(--color-border-secondary);
}

.uploadButton:active,
.downloadButton:active:not(:disabled) {
  background: var(--color-border-secondary);
}

.downloadButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  background: var(--color-bg-primary);
  border-color: var(--color-bg-tertiary);
}

/* Footer Actions */
.actions { display: flex; justify-content: center; gap: var(--space-4); }

.startButton {
  padding: var(--space-4) var(--space-2);
  background: linear-gradient(135deg, var(--color-primary-500), var(--color-primary-700));
  color: var(--color-text-primary);
  border: none;
  border-radius: var(--radius-lg);
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-bold);
  cursor: pointer;
  transition: all var(--transition-base);
  min-width: 200px;
}

.startButton:hover:not(:disabled) {
  background: linear-gradient(135deg, var(--color-primary-600), var(--color-primary-800));
  transform: translateY(-2px);
}

.startButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
}

.backButton {
  padding: var(--space-4) var(--space-2);
  background: linear-gradient(135deg, var(--color-error-500), var(--color-error-600));
  color: var(--color-text-primary);
  border: none;
  border-radius: var(--radius-lg);
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-bold);
  cursor: pointer;
  transition: all var(--transition-base);
  min-width: 200px;
}

.backButton:hover {
  background: linear-gradient(135deg, var(--color-error-600), var(--color-error-700));
  transform: translateY(-2px);
}

/* Mobile responsive for section headers */
@media (max-width: 768px) {
  .sectionHeader {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--space-3);
  }

  .uploadButton,
  .downloadButton {
    width: 100%;
    padding: 10px var(--space-4);
  }

  .actions {
    padding: var(--space-3) var(--space-4);
    flex-direction: column;
    gap: var(--space-3);
  }

  .startButton {
    padding: var(--font-size-sm) 28px;
    font-size: var(--font-size-base);
    min-width: 160px;
  }

  .backButton {
    padding: var(--font-size-sm) 28px;
    font-size: var(--font-size-base);
    min-width: 160px;
  }
}

/* Game Configuration Styles */
.gameConfigSection {
  display: flex;
  flex-direction: column;
  gap: var(--space-4);
}

.gameConfigOptions {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.configRow {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.75rem 0 0;
}

.configRow:first-child {
  padding-top: 0;
}

.configLabel {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  flex: 1;
}

.configTitle {
  font-weight: 600;
  color: var(--color-text-primary);
  font-size: 0.95rem;
}

.configSubtitle {
  color: var(--color-text-secondary);
  font-size: 0.85rem;
  line-height: 1.3;
}

.configToggle {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 28px;
  cursor: pointer;
  border: 2px solid var(--color-border-secondary);
  border-radius: 28px;
  background-color: var(--color-background);
  transition: all 0.3s ease;
}

.configToggle:hover {
  border-color: var(--color-primary-300);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.configToggle input {
  opacity: 0;
  width: 0;
  height: 0;
}

.toggleSlider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--color-border-secondary);
  transition: all 0.3s ease;
  border-radius: 24px;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
}

.toggleSlider:before {
  position: absolute;
  content: "";
  height: 20px;
  width: 20px;
  left: 2px;
  bottom: 2px;
  background-color: var(--color-text-primary);
  transition: all 0.3s ease;
  border-radius: 50%;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.configToggle input:checked + .toggleSlider {
  background-color: var(--color-success-500);
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
}

.configToggle input:checked + .toggleSlider:before {
  transform: translateX(22px);
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
}

.configToggle input:checked {
  border-color: var(--color-success-500);
}

.configControls {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.consecutiveSelect {
  padding: 0.5rem 0.75rem;
  border: 2px solid var(--color-border-secondary);
  border-radius: var(--radius-md);
  background: var(--color-bg-input);
  color: var(--color-text-primary);
  font-size: 0.9rem;
  min-width: 120px;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: var(--shadow-sm);
  appearance: none;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 0.5rem center;
  background-repeat: no-repeat;
  background-size: 1.5em 1.5em;
  padding-right: 2.5rem;
}

.consecutiveSelect:hover {
  border-color: var(--color-primary-300);
  background-color: var(--color-bg-hover);
  box-shadow: var(--shadow-base);
}

.consecutiveSelect:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 3px var(--color-primary-200);
  background-color: var(--color-bg-input);
}

/* Mobile responsive for game config */
@media (max-width: 768px) {
  .configRow {
    flex-direction: row;
    align-items: center;
    gap: 0.75rem;
  }
  
  .configLabel {
    flex: 1;
    min-width: 0;
  }
  
  .configControls {
    flex-shrink: 0;
    flex-direction: row;
  }
  
  .consecutiveSelect {
    min-width: 100px;
  }
}

/* Mobile responsive for add sections grid */
@media (max-width: 640px) {
  .addSectionsGrid {
    grid-template-columns: 1fr;
    row-gap: 24px;
  }
  
  .addCustomSection {
    grid-column: 1;
    grid-row: auto;
  }
  
  .addGameSection {
    grid-column: 1;
    grid-row: auto;
  }
  
  .uploadSection {
    grid-column: 1;
    grid-row: auto;
  }
}
